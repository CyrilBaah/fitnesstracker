openapi: 3.0.3
info:
  title: Fitness Tracker
  version: 1.0.0
  description: Your project description
paths:
  /accounts/change-password/:
    put:
      operationId: accounts_change_password_update
      description: Change password
      tags:
      - accounts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChangePassword'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ChangePassword'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ChangePassword'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChangePassword'
          description: ''
    patch:
      operationId: accounts_change_password_partial_update
      description: Change password
      tags:
      - accounts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedChangePassword'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedChangePassword'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedChangePassword'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChangePassword'
          description: ''
  /accounts/login/:
    post:
      operationId: accounts_login_create
      description: Login API view
      tags:
      - accounts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Login'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Login'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Login'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Login'
          description: ''
  /accounts/logout/:
    post:
      operationId: accounts_logout_create
      description: Logout users.
      tags:
      - accounts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Logout'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Logout'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Logout'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Logout'
          description: ''
  /accounts/password_reset/:
    post:
      operationId: accounts_password_reset_create
      description: |-
        An Api View which provides a method to request a password reset token based on an e-mail address

        Sends a signal reset_password_token_created when a reset token was created
      tags:
      - accounts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Email'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Email'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Email'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Email'
          description: ''
  /accounts/password_reset/confirm/:
    post:
      operationId: accounts_password_reset_confirm_create
      description: An Api View which provides a method to reset a password based on
        a unique token
      tags:
      - accounts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordToken'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PasswordToken'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PasswordToken'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PasswordToken'
          description: ''
  /accounts/password_reset/validate_token/:
    post:
      operationId: accounts_password_reset_validate_token_create
      description: An Api View which provides a method to verify that a token is valid
      tags:
      - accounts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResetToken'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ResetToken'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ResetToken'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResetToken'
          description: ''
  /accounts/register/:
    post:
      operationId: accounts_register_create
      description: Registeration API view
      tags:
      - accounts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Registeration'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Registeration'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Registeration'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Registeration'
          description: ''
  /accounts/token/refresh/:
    post:
      operationId: accounts_token_refresh_create
      description: |-
        Takes a refresh type JSON web token and returns an access type JSON web
        token if the refresh token is valid.
      tags:
      - accounts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenRefresh'
          description: ''
  /exercises/:
    get:
      operationId: exercises_retrieve
      description: List all Exercises | Administrators
      tags:
      - exercises
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Exercise'
          description: ''
  /exercises/create-exercise/:
    post:
      operationId: exercises_create_exercise_create
      description: Create a new Exercise
      tags:
      - exercises
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Exercise'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Exercise'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Exercise'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Exercise'
          description: ''
  /exercises/delete-exercise/{id}/:
    delete:
      operationId: exercises_delete_exercise_destroy
      description: Delete an Exercise
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - exercises
      security:
      - jwtAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /exercises/my-exercises/:
    get:
      operationId: exercises_my_exercises_retrieve
      tags:
      - exercises
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Exercise'
          description: ''
  /exercises/update-exercise/{id}/:
    put:
      operationId: exercises_update_exercise_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - exercises
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Exercise'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Exercise'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Exercise'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Exercise'
          description: ''
  /nutrition/:
    get:
      operationId: nutrition_retrieve
      description: List all Nutrition | Administrators
      tags:
      - nutrition
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Nutrition'
          description: ''
  /nutrition/create-nutrition/:
    post:
      operationId: nutrition_create_nutrition_create
      description: Create a new Nutrition
      tags:
      - nutrition
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Nutrition'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Nutrition'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Nutrition'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Nutrition'
          description: ''
  /nutrition/delete-nutrition/{id}/:
    delete:
      operationId: nutrition_delete_nutrition_destroy
      description: Delete an nutrition
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - nutrition
      security:
      - jwtAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /nutrition/my-nutrition/:
    get:
      operationId: nutrition_my_nutrition_retrieve
      tags:
      - nutrition
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Nutrition'
          description: ''
  /nutrition/update-nutrition/{id}/:
    put:
      operationId: nutrition_update_nutrition_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - nutrition
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Nutrition'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Nutrition'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Nutrition'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Nutrition'
          description: ''
  /workout/:
    get:
      operationId: workout_retrieve
      description: List all Workout | Administrators
      tags:
      - workout
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Workout'
          description: ''
  /workout/create-workout/:
    post:
      operationId: workout_create_workout_create
      description: Create a new Workout
      tags:
      - workout
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Workout'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Workout'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Workout'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Workout'
          description: ''
  /workout/delete-workout/{id}/:
    delete:
      operationId: workout_delete_workout_destroy
      description: Delete an workout
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - workout
      security:
      - jwtAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /workout/my-workout/:
    get:
      operationId: workout_my_workout_retrieve
      tags:
      - workout
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Workout'
          description: ''
  /workout/update-workout/{id}/:
    put:
      operationId: workout_update_workout_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - workout
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Workout'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Workout'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Workout'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Workout'
          description: ''
components:
  schemas:
    ChangePassword:
      type: object
      description: Change password Serializer
      properties:
        old_password:
          type: string
        new_password:
          type: string
      required:
      - new_password
      - old_password
    Email:
      type: object
      properties:
        email:
          type: string
          format: email
      required:
      - email
    Exercise:
      type: object
      description: Serializer for Exercise
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
        type:
          type: string
          maxLength: 100
        description:
          type: string
        date:
          type: string
          format: date
          readOnly: true
        user:
          type: integer
      required:
      - date
      - description
      - id
      - name
      - type
      - user
    FoodTypeEnum:
      enum:
      - breakfast
      - lunch
      - dinner
      - snack
      type: string
      description: |-
        * `breakfast` - Breakfast
        * `lunch` - Lunch
        * `dinner` - Dinner
        * `snack` - Snack
    Login:
      type: object
      description: Login Serializer
      properties:
        email:
          type: string
        password:
          type: string
          writeOnly: true
        google_id:
          type: string
      required:
      - email
    Logout:
      type: object
      description: Logout Serializer
      properties:
        refresh:
          type: string
      required:
      - refresh
    Nutrition:
      type: object
      description: Serializer for Nutritions.
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 200
        food_type:
          $ref: '#/components/schemas/FoodTypeEnum'
        calorie_count:
          type: integer
          maximum: 2147483647
          minimum: 0
        date:
          type: string
          format: date
          readOnly: true
        user:
          type: integer
      required:
      - calorie_count
      - date
      - food_type
      - id
      - name
      - user
    PasswordToken:
      type: object
      properties:
        password:
          type: string
        token:
          type: string
      required:
      - password
      - token
    PatchedChangePassword:
      type: object
      description: Change password Serializer
      properties:
        old_password:
          type: string
        new_password:
          type: string
    Registeration:
      type: object
      description: Registration Serializer
      properties:
        id:
          type: integer
          readOnly: true
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        email:
          type: string
          format: email
          title: Email address
          maxLength: 254
        password:
          type: string
          writeOnly: true
          maxLength: 128
        google_id:
          type: string
          nullable: true
          maxLength: 100
      required:
      - email
      - id
      - username
    ResetToken:
      type: object
      properties:
        token:
          type: string
      required:
      - token
    TokenRefresh:
      type: object
      properties:
        access:
          type: string
          readOnly: true
        refresh:
          type: string
          writeOnly: true
      required:
      - access
      - refresh
    Workout:
      type: object
      description: Serializer for Workout.
      properties:
        id:
          type: integer
          readOnly: true
        exercises:
          type: array
          items:
            $ref: '#/components/schemas/Exercise'
        date:
          type: string
          format: date
        time:
          type: string
          format: time
        duration:
          type: string
        user:
          type: integer
      required:
      - date
      - duration
      - exercises
      - id
      - time
      - user
  securitySchemes:
    jwtAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
